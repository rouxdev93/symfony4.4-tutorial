# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/micropost
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-apache-node-browsers-legacy
        environment:
          APP_ENV : TEST
          DATABASE_URL: mysql://rouxdev:PHrp7JYFbXzaYAdu@127.0.0.1/micro-post
          MAILER_FROM: micro@micropost.com
          MAILER_DSN: smtp://7e1466628ffb35:cf86a0036c1c17@smtp:mailtrap:io:2525?encryption=tls&auth_mode=login
      - image: circleci/mysql:8.0.27
        environment:
           MYSQL_ROOT_PASSWORD: 'z^w?B5W=a~uC+e)%'
           MYSQL_DATABASE: micro-post

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Install apt
          command: sudo apt-get install -y zlib1g-dev
      - run:
          name: Install PHP MYSQL
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: Wait for MYSQL
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Composer
          command: sudo composer self-update
      - run:
          name: Composer install
          command: composer.phar install --no-dev #--optimize-autoloader
      - run:
          name: Run migrations
          command: php bin/console doctrine:migrations:migrate --env=test --no-interaction
      - run:
          name: Run tests
          command: ./bin/phpunit
  deploy:
    working_directory: ~/micropost
    docker:
      - image: circleci/php:7.4-apache-node-browsers-legacy
        steps:
          - checkout
          - run:
              name: Composer install
              command: composer.phar install --no-dev #--optimize-autoloader
          - run:
              name: Clear cache
              command: php bin/console cache:clear --env=prod --no interaction
          - run:
              name: Yarn
              command: yarn install && yarn run encore production
          - run:
              name: Add droplet
              command: ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
          - run:
              name: Pre-deploy
              command: ssh -T $DROPLET_USER:$DROPLET_IP < bin/deploy/pre_deploy.sh
          - run:
              name: Deploy Code
              command: rsync -vzcrSLhp --exclude '.env' --delete ~/micropost/ $DROPLET_USER:$DROPLET_IP:/var/www/micropost_current
          - run:
              name: Post Deploy
              command: ssh -T $DROPLET_USER:$DROPLET_IP < bin/deploy/deploy.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master